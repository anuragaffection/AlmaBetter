Routing in Next Js 





Introduction to Routing in next js 
Routing SetUp in next js 
Dynamic Routes 
Nested Routing 
Programmatic navigation 




Explore more {
    - example of server side routing 
    - routing using context 
    - find function 
    - npm vs npx 
}






Introduction to Routing in next js (
    --- why routing  
    --- client side routing 
    --- server side Routing

)


Routing SetUp in next js {
    --- Link 
    --- mutiple pages 
    --- automatic route generation 
    --- nested routes 
    --- dynamic routes 
    --- index routes 
    --- custom 404 page 
}


Dynamic Routes {
    --- parameterized urls 
    --- context
    --- useRouter 

    --- context & useRouter = are same 
    --- getServerSideProps takes context as parameter 
}


Nested Routing {
    --- brackets []
    --- index  /
}


Programmatic navigation {
    --- push ()
    --- replace()
    --- useRouter()
    --- Link 

}


Custom 404 pages {
    --- 404.js
    --- custom error
    --- fallback components 
    --- Redirects 
}







----------------------------------------------------------------------------------------








Introduction to Routing in next js (

    --- home page = / 
    --- index page = /

    --- why routing {
        - without full page refresh 
        - better SEO 
    } 

    --- client side routing {
        - Link 

    }

    --- server side Routing {
        - getServerSideProps
        - getInitialProps   
        - useRouter 
        - isFallBack
        - context  
        - query
        - context.query
        - context - similar to - useRouter()   
    }

)










Routing SetUp in next js {

    --- intro {
        - npx create-next-app
        - cd 
        - npm run dev 
    }

    --- Link {
        - client side navigation 
        - client side routing 
        - href
        - passHref 
        - legacyBehavior 
    }

    --- mutiple pages 
    --- automatic route generation 
    --- nested routes 
    --- dynamic routes 
    --- index routes 

    --- custom 404 page {
        - 404.js
    }
}









Dynamic Routes {

    --- parameterized urls {
        - useRouter
        - context
        - context.query
        - getServerSideProps
        - getStaticProps
        - context.params
    }

    --- context {
        - context.params
        - context.query
        - context.resolvedUrl
        - context.req
        - context.res 
    }
   
}










Nested Routing {
    --- brackets []
    --- index  /

}










Programmatic navigation {

    --- push () {
        - create history 
        - we can use browser back button 
    }

    --- replace() {
        - does not make history 
        - we can not use browser back button 
    }

    --- useRouter()
    --- Link 

}





Custom 404 pages {

    --- 404.js 

    --- custom error {
        404.js
        500.js - internal server error 
        403.js - forbidden error 

    }

    --- fallback components 
    --- Redirects 
}










Activity fill in the blanks {

    Routing in Next.js is based on a __________(hierarchical/file-based/both)  approach, where each file inside the "pages" directory corresponds to a unique route accessible in the application.


    The Next.js automatic routing system supports __________(SSG/SIngle-page app/scalability), which allows developers to add new pages and features to the application easily without major impacts on the existing codebase.



    Next.js handles client-side navigation through the use of the built-in __________ (Link/Route/Nav) component from the next/link module, allowing users to navigate between pages without triggering a full page refresh.



    The getServerSideProps function is used in Next.js for __________(server-side/client-side/static site generation(SSG) ) routing, allowing developers to fetch and process data on the server before rendering a page.



    Answer
    file-based
    scalability
    Link
    server-side
}











Activity true / false  {

    a.  In Next.js, dynamic routing is achieved using placeholders enclosed in angle brackets ([ ]).

    b.  Next.js allows developers to create nested routes by organizing pages in subdirectories, but it does not support hierarchical page structures.


    c.  Next.js only supports static routes, where each page is predefined, and dynamic routing is not possible.



    d.  Next.js supports both client-side and server-side routing for dynamic pages.



    e.  Programmatic navigation in Next.js allows you to navigate between pages programmatically using the 'push' method from the 'useRouter' hook.



    Answer
    a. True
    b. False
    c. False
    d. True
    e. True
}









