Life Cycle Method & React Hooks





Pre-defined Methods


--- constructor()
--- super()
--- state
--- setState
--- props
--- render()


--- componentDidMount()
--- componentDidUpdate()
--- componentWillUnmount()
--- componentDidCatch()
--- componentDidCatach(error, errorInfo)


--- shouldComponentUpdate()
--- getDerivedFromProps()
--- getSnapshotBeforeUpdate()


--- useState()
--- useEffect()
--- useContext()
--- useCallback()
--- useRef()
--- useMemo()







Recall 
--- appendChild()
--- querySelector()

--- createContext()
--- createElemnt()
--- addEventListener()
--- removeListener()





Returning 
--- jsx
--- array
--- fragments 





What is React Hook ?
---  A function that allow functional component to have state.









A. Component Lifecycle
B. Component Lifecycle Methods
C. React Hooks
D. useState()
E. useEffect()
F. useContext()
G. useCallback()










A. Component Lifecycle

01. Lifecycle 
--- Initialization -> Mounting -> updating -> unMounting 

02. In class component
--- constructor -> render -> Mounting -> updating -> unMounting











B. Component Lifecycle Methods
-- constructor()
-- render()
-- componentDidMount()
-- componentDidUpdate()
-- componentWillUnmount()


















