


1. What is the main distinction between React.js and Next.js?
   a) React.js is a framework, while Next.js is a library.
   b) React.js is for server-side rendering, while Next.js is for client-side rendering.
   c) Next.js is a framework, while React.js is a library.
   d) There is no significant difference; they are interchangeable.





2. Which of the following best describes the difference between a library and a framework?
   a) A framework provides a complete solution for building applications, while a library offers specific tools and functions.
   b) A library is used for client-side development, while a framework is for server-side development.
   c) A framework is more lightweight than a library.
   d) A library is a collection of pre-written code, while a framework dictates the structure of your application.








3. What is the primary purpose of state in React.js?
   a) To manage routing in the application.
   b) To store data that can change over time.
   c) To define the structure of the application's UI.
   d) To handle server-side rendering.







4. What are components in React.js?
   a) Building blocks of code used for server-side rendering.
   b) Reusable code units that define UI elements.
   c) A way to manage application state.
   d) Specific modules used for handling API requests.







5. Which of the following is a limitation of React.js when it comes to routing?
   a) React.js provides a built-in router.
   b) React.js has no support for routing.
   c) React.js requires a third-party library for routing.
   d) React.js only supports server-side routing.







6. Why is on-page SEO considered challenging in React.js applications?
   a) React.js doesn't support SEO optimization.
   b) React.js doesn't allow meta tags to be added.
   c) React.js uses server-side rendering, which doesn't affect SEO.
   d) React.js relies on client-side rendering, which search engines struggle to crawl.









7. Which of the following is NOT a feature of Next.js?
   a) Automatic routing.
   b) Improved performance with Server-Side Rendering (SSR).
   c) Automatic SEO optimization.
   d) Serverless deployment.







8. What is the primary benefit of Server-Side Rendering (SSR) in Next.js? (**)
   a) Faster initial page load times.
   b) Better client-side performance.
   c) Enhanced SEO capabilities.
   d) Improved development speed.







9. In Client-Side Rendering (CSR), where does the initial processing take place?
   a) On the server.
   b) On the client's CPU.
   c) In the database.
   d) In the cloud.







10. Server-Side Rendering (SSR) in Next.js is known for:
    a) Relying heavily on client-side processing.
    b) Handling all rendering on the server before sending it to the client.
    c) Using asynchronous requests to improve performance.
    d) Offering no advantages over CSR.










1. What is the main distinction between React.js and Next.js?
   - Answer: c) Next.js is a framework, while React.js is a library.



2. Which of the following best describes the difference between a library and a framework?
   - Answer:  a) A framework provides a complete solution for building applications, while a library offers specific tools and functions.




3. What is the primary purpose of state in React.js?
   - Answer: b) To store data that can change over time.



4. What are components in React.js?
   - Answer: b) Reusable code units that define UI elements.



5. Which of the following is a limitation of React.js when it comes to routing?
   - Answer: c) React.js requires a third-party library for routing.



6. Why is on-page SEO considered challenging in React.js applications?
   - Answer: d) React.js relies on client-side rendering, which search engines struggle to crawl.



7. Which of the following is NOT a feature of Next.js?
   - Answer: c) Automatic SEO optimization.



8. What is the primary benefit of Server-Side Rendering (SSR) in Next.js?
   - Answer: a) Faster initial page load times.



9. In Client-Side Rendering (CSR), where does the initial processing take place?
   - Answer: b) On the client's CPU.



10. Server-Side Rendering (SSR) in Next.js is known for:
    - Answer: b) Handling all rendering on the server before sending it to the client.






