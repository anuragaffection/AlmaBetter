
Topics
-- Agile methodologies 
-- Test-driven development (TDD)
-- CI/CD
-- Coding standards & ( SOLID Principle)
-- DevSecOps
-- Performance optimization techniques
-- Security best practices
-- Scalability and robustness 
-- Automation to increase performance




Links {
    -- 
}


Note {
    -- #21.31 
}


Task {
    -- principle of minimalism.
}





Agile methodologies {
    -- scrum   = time target of task
    -- kanban = what to do 
    -- XP     = extreme Programing
    -- LSD    = time saving form extra uncessary task like meeting 
    -- FDD    = Feature Drive Development

    -- sprints =
    -- LSD = Learn software Development
    -- JIT = Just in time 
    -- 
}






Test-driven development (TDD) {
    -- first write the test case, then write code 

    steps 
    -- 01. write test 
    -- 02. run test 
    -- 03. write minimal code 
    -- 04. run the test again
    -- 05. Refactor ]]
    -- 06. repeat [from 01]

    -- JUnit  for Java
    -- pytest for Python.
}






CI/CD {
    -- CI = continuous integration
    -- CD = continuous Delivery 

    CI
    -- design 
    -- code 
    -- build
    -- test 

    CD 
    -- automated deployment
    -- deployment to staging ]] 
    -- testing in staging 
    -- release 
    -- maintain 
    -- operate 

    why CI & CD
    -- infrastructure as code 
}





Coding standards & ( SOLID Principle) {
    
    Coding standards
    -- 

    SOLID Principle]]]
    -- S = SRP = Single Responsibility Principle
    -- O = OCP = Open closed principle
    -- L = LSP = Liskov Substitution Principle
    -- I = ISP = interface Segregation Principle
    -- D = DIP = Dependency inversion principle

    Solid principle
    -- mostly followed in Oops concept 
    -- loose coupling 
    -- decoupling 
    -- 
}





DevSecOps {
    -- DevSecOps = a Security layer above DevOps 

    -- Dev = Developement 
    -- Sec = Security
    -- Ops = Operatios 

    Dev 
    -- CI
    -- Automated testing
    -- code Review 

    Sec 
    -- SAST = static application Security testing
    -- DAST = Dynamic application Security testing
    -- Security assessments 

    Ops 
    -- CD
    -- IaC = infrastructure as code 
    -- Monitoring 

    -- shift-left approach 
    -- 
}





Performance optimization techniques {
    -- CDNs = continuous delivery network 
    
    Techniques
    -- Optimize the code [good algorithm]
    -- caching [memoization]
    -- database optimization [indexing]
    -- reduce network latency 
    -- parallel processing [ async, concurrency]
    -- compressing file and code 
    -- minimizing white spaces in code 
    -- use of CDNs
}




Security best practices {
    -- SDLC = software Developement Life Cycle 
    -- SDL  = security development lifecycle 

    security methods 
    -- MFA = Multi factor authentication 
    -- RBAC = Role based Acces control 
    -- regular updates
    -- secure network configuration 
    -- IDS = Intrusion detection system
    -- IPS = Intrusion Prevention system
    -- Data encryption 
    -- robust password 
    -- privacy & anonymization 
    -- 
}




Scalability and robustness {

    Scalability
    -- load balancing 
    -- vertical scaling
    -- horizontal scaling
    -- auto Scaling 
    -- Distributed architecture
    -- caching
    -- Asynchronous processing

    robustness
    -- fail over testing
    -- data backup 
}




Automation to increase performance {
    -- 
}



Activity {

    Fill in the blanks:

    01. Agile software development focuses on __________ (documentation/Individuals) and __________(interactions/process).
    
    02. Scrum is an example of an __________ (Iterative/Waterfall) Agile methodology.
    
    03. The first step in TDD is to write a ____________(passing test/failing test).
    
    04. The failing test should initially cover the desired ____________ (functionality/implementation details) of the production code.
    
    05. CI/CD helps in automating the software __________ (delivery/development) process.
    
    Answers
    01. Individuals, interactions
    02. Iterative
    03. Failing test
    04. Functionality
    05. Delivery



    True or False:
    
    01. The "L" in SOLID stands for Liskov Substitution Principle.
    
    02. Deviating from coding standards can result in inconsistent code, increased technical debt, and difficulty in maintaining and enhancing the software.
    
    03. DevSecOps emphasizes the use of minimal documentation and security policies.
    
    04. Caching is a technique used to store data or computations in order to reduce future processing time.
    
    05. Minification is the process of simplifying code by removing unnecessary characters, such as whitespaces and comments.
    
    06. Content Delivery Networks (CDNs) improve website performance by moving content closer to the end users.
    
    Answers
    01. True
    02. True
    03. False
    04. True
    05. True
    06. False
}

