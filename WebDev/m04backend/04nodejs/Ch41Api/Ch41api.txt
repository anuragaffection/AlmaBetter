
Webservice 

Types of Web Services 
-- simple object access protocol (SOAP)
-- Representational State Transfer (REST)
-- GraphQL 

What is an API 
Web API 
How API Work 

Types of Web APIs 
-- RESTful APIs 
-- GraphQL APIs
-- WebSocket APIs 

RESTful APIs in details 

API Testing 
API Testing tools 

HTTP Methods 
HTTP Status Code 

Project OverView 






Some Abbreviation {
    -- APIs = Application programming Interfaces 
    -- HTTP = Hyper text Transfer protocol
    -- JWT  = Json Web tokens 
    -- WWW  = World Wide Web 
    -- xml  = Extensible markup language 
    -- smtp = 
    -- tcp  = 
    -- w3c  = World wide web consortium 
    -- Json = javascript object notation 
    -- REST = Representational State Transfer
    -- uri  = uniform resource identifiers 
    -- url  = uniform resource locater 
    -- SSL  = 
    -- WSDL = Web Service Definition language


}



Webservice {
    -- system software to enable communication between different applications

    Three main components 
    -- Service provider 
    -- service Registry 
    -- service requestor 
}




Types of Web Services {

    simple object access protocol (SOAP) 
    -- based on xml 
    -- it is stateful 

    Rest 
    -- it is stateless 
    -- use uri 
    -- resources can be json, xml, html 
    -- SSL & OAuth 
    -- use http methods like  GET, POST, PUT, DELETE
    

    GraphQL
    -- it is a query language
    -- reduce over fetching 
    -- reduce under fetching 
    -- single endpoint

}


What is an API 


Web API 


How API Work 



Types of Web APIs {
    
    Rest 
    -- it is stateless 
    -- use uri 
    -- resources can be json, xml, html 
    -- SSL & OAuth 
    -- use http methods like  GET, POST, PUT, DELETE
    

    GraphQL
    -- it is a query language
    -- reduce over fetching 
    -- reduce under fetching 
    -- single endpoint


    WebSocket APIs
    -- full duplex communication
    -- real time chat applications
}




RESTful APIs in details {
    -- API that follow REST standard
    -- 

    Basic format 
    -- url endpoint
    -- http verb 
    -- body messages

    http verbs 
    -- GET
    -- POST
    -- DELETE
    -- PUT
    -- PATCH

    URL endpoint
    -- 

    Status Codes 
    -- 1xx  informational 
    -- 2xx  success 
    -- 3xx  Redirection 
    -- 4xx  client error 
    -- 5xx  server error 


    2xx success 
    -- 200  OK, Request was succesful 

    3xx Redirection 
    -- 301  Moved permanetly 

    4xx client error 
    -- 400  bad Request 
    -- 401  unauthorize 
    -- 403  forbidden 
    -- 404  page Not found 

    5xx server error 
    -- 500  Internal Sever error
    -- 503  Server unavailable 
}




API Testing {

    Types of API testing 
    -- unit 
    -- integration 
    -- functional 
    -- load 
    -- security 
    -- error handling 
    -- regression 

    Test setup 
    -- Postman 
    -- SOAPUi
    -- cURL

    Automation of API testing 
    -- Postman
    -- Newman 
    -- RestAssured 
}



API Testing tools {
    -- Postman
    -- Swagger (OpenAPI)
    -- Insomnia 
    -- SoapUI 
    -- JMeter 
    -- RestAssured
    -- Junit 
    -- TestNG 

}



HTTP Methods {

    http methods
    -- GET
    -- POST
    -- DELETE
    -- PUT
    -- PATCH
    -- HEAD 
    -- OPTIONS 

    Idempotent 
    -- GET
    -- PUT
    -- PATCH
    -- DELETE

    Not Idempotent
    -- POST
    -- 
}





HTTP Status Code {

    Status Codes 
    -- 1xx  informational 
    -- 2xx  success 
    -- 3xx  Redirection 
    -- 4xx  client error 
    -- 5xx  server error 


    2xx success 
    -- 200  OK, Request was succesful 
    -- 201  created 
    -- 204  No content to send 

    3xx Redirection 
    -- 301  Moved permanetly 

    4xx client error 
    -- 400  bad Request or validation error 
    -- 401  unauthorize 
    -- 403  forbidden 
    -- 404  page Not found 

    5xx server error 
    -- 500  Internal Sever error
    -- 503  Server unavailable 

}




Project OverView 



Activity {

    Activity: Fill in the blanks

    01. ____________ (Webservice / API) is the acronym for a standardized way of communication between software applications over the internet.
    
    02. ____________ (REST / SOAP) web service allows communication using XML messages over HTTP.
    
    03. ____________ (JSON / XML) is the primary language used to describe data in a web service.
    
    04. ____________ (REST / SOAP) web service allows communication using JSON messages over HTTP.
    
    05.HTTP.____________ (HTTP / FTP) protocol commonly used to communicate with web services.
    
    Answers
    01. Web Service
    02. SOAP
    03. XML
    04. REST
    05. HTTP




    Activity: True or False

    01. A Web API (Application Programming Interface) allows different software applications to communicate and interact with each other over the Internet.
    
    02. Web APIs define a set of rules and protocols that applications must follow to exchange data and perform actions.
    
    03. There are only two types of Web APIs: SOAP APIs and RESTful APIs.
    
    04. RESTful APIs (Representational State Transfer) are designed around resources and use standard HTTP methods to interact with those resources.
    
    05.  GraphQL APIs allow clients to request only the needed data, making them more flexible and efficient than RESTful APIs.
    
    06. SOAP APIs use XML as the format for data exchange and rely on HTTP for communication.
    
    Answers
    01. True
    02. True
    03. False
    04. True
    05. True
    06. True


}




Notes {

    idempotent 
    -- meaning that making the same request multiple times should yield the same result.

    JSON-RPC 
    -- is a lightweight remote procedure call protocol that uses JSON for data encoding.

    XML-RPC 
    -- is a remote procedure call protocol that uses XML for data encoding.
}






RESTful vs Restless {

    RESTful
    -- use REST architecural style 
    -- use url to expose business logic 
    -- supports html, json, text 


    Restless
    -- use SOAP protocol
    -- use service Interface to expose business logic
    -- supports xml 
}



Webservice vs APIs {

    01. Communication Mechanism:

    Web Services:
    -- Relies on protocols like SOAP (Simple Object Access Protocol) or REST (Representational State Transfer).
    -- SOAP-based services use XML for message format and may have rigid data typing.
    
    APIs:
    -- Can utilize SOAP, REST, GraphQL, or other protocols based on service provider's choice or needs.
    -- Offers flexibility in choosing communication protocols and data formats.
    


    02. Supporting Protocols:

    Web Services:
    -- SOAP-based services use protocols like HTTP, SMTP, etc.
    -- REST services primarily use HTTP/HTTPS for communication.
    
    APIs:
    -- Mostly use HTTP/HTTPS, especially for RESTful APIs.
    -- Protocol choice can vary, such as WebSocket for real-time APIs or other custom protocols.
    
    
    
    03. Hosting:
    
    Web Services:
    -- Typically hosted on dedicated servers or cloud services.
    -- More traditional hosting solutions.
    
    APIs:
    -- Hosted on servers, cloud platforms, or third-party services.
    -- Offered by the organization providing the API, sometimes as a service to external developers.

}





Task {
    -- OAuth
    -- JWT 
    -- API
   
}





