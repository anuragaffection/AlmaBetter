NodeJs in Depth 


Buffer 
URL 
Managing Modules with NPM 

Development Dependencies 
-- Automatically Generated files 
-- Installing from package.json 
-- Global Installations 
-- Managing Modules 
-- Listing modules
-- updating modules 
-- uninstalling modules 
-- Auditing Modules 

Nodemon 
-- Installing nodemon 
-- using options 
-- using configurations 

chalk 

User Defined Modules 
-- creating 
-- testing 
-- saving local module 

Debugging nodejs applications 
-- using watchers 
-- using breakpoints 




Notes {
    -- cd <changeDrive>
    -- mkdir <newDirectory>
    -- touch index.js
}



Buffer {
    -- temporary memory storage 
    -- an array of integers 
    -- 

    Commands 
    -- Buffer.alloc()
    -- subarray()
    -- toString()
    -- copy()


    Syntax 
    -- new Buffer.alloc(<size>)
    -- new Buffer.alloc([array of intergers])
    -- new Buffer.alloc( size, text, encodingType);

    -- subarray(indexIncluded, indexExcluded)
    -- toString(encodingType, indexIncluded, indexExcluded)

    -- copy(targetBuffer)
    -- copy(target, targetStart, sourceStart, sourceEnd);

}







URL {
    -- Uniform resource locater 
    
    Commands
    -- url.parse()
    -- url.format()
    -- url.resolve()

    
    parsed compoents 
    -- protocol 
    -- host 
    -- pathname 
    -- query 
    -- hash 

    url.parse
    -- convert url into object 

    url.format
    -- convert object into url 

    url.resolve]]
    -- resolve relative_url & base_url make absolute_url

}






Managing Modules with NPM {
    -- npm i
    -- npm install <package_name> 
    -- npm install <package_name> --save 
    -- npm install <package_name> --save-dev

    -- npm update <package_name> 
    -- npm uninstall <package_name>

    -- npm ls 
    -- npm install <package_name> @<version>
    -- npm install --production 
    -- npm publish 

    file 
    -- package.json 
    -- package-lock.json 
}





Development Dependencies {

    testing tools 
    -- Mocha 
    -- jest 


    code coverage tools 
    -- istanbul 
    -- coveralls 


    linting tools
    -- eslint 
    -- jshint 


    documentaion generators 
    -- jsDoc
    -- swagger  


    Commands
    -- npm install <package_name> --save-dev
    -- npm install --production


    Automatically Generated files 
    -- package-lock.json
    -- node modules 


    Installing from package.json 
    -- npm i 
    -- npm i --production


    Global Installations 
    -- npm i <package_name> -g 


    Listing modules
    -- npm ls 
    -- npm ls --all 
    -- npm ls <package_name> 


    updating modules 
    -- npm outdated 
    -- npm update
    -- npm up 


    uninstalling modules 
    -- npm uninstall <module_name> 
    -- npm uninstall -g <module_name>

    Auditing Modules 
    -- npm audit 
    -- npm audit fix 
}





Nodemon {
    
    Installing nodemon 
    -- npm install nodemon --global 
    -- npm install nodemon --save-dev 
    -- nodemon <server.js>
    -- nodemon server.js 3006 
    -- rs & ENTER = restart 
    -- nodemon --help
    

    using options]] 
    -- exec 
    -- execMap
    -- ext 
    -- delay 
    -- watch 
    -- ignore 
    -- verbose 


    using configurations 
    -- nodemon.json 
}
    




chalk {
    -- npm install chalk
    -- const chalk = require('chalk');
}




User Defined Modules 
-- creating 
-- testing 
-- saving local module 

Debugging nodejs applications 
-- using watchers 
-- using breakpoints 






Practical 01 {

    express 
    -- framework for node.js
    
    mongoose 
    -- ODM library for Mongodb
    -- ODM = object data modeling 

    bcrypt 
    -- library for password hashing 
    -- salting 
    -- hashing 
    
    jsonwebtoken 
    -- JWT = json web token 
    -- authentication and authorization

    dotenv 
    -- .env 
    -- environment variables 
    -- sensitive information 
    -- api keys 
}







Actvity {

    Actvity : puzzle 

    1. A popular HTTP method for retrieving data from a server.
    
    02. A temporary data storage area often used for efficient data transfer.

    03. Abbreviation for Uniform Resource Locator.
    
    04. The command used to install a new package in Node.js using NPM.

    05. A package manager for JavaScript that helps you manage project dependencies.

    answer 
    01. get
    02. buffer
    03. url
    04. install
    05. npm
    
    
    
    
    
    Activity: Fill in the blanks
    
    01. The npm ____________(upgrade / update) command is used to update outdated modules in your project.
    
    02. When you want to remove a module from your project, you can use the npm _____________(remove / uninstall) command.
    
    03. You can install Nodemon globally using _____________(npm install -g / npm global add).
    
    04. Nodemon is primarily used for _____________(automatic restarts / live reloading) in Node.js development. 
    
    05. Chalk is a popular library for adding ____________(color / images) to text in the terminal.
    
    Answers
    01. Update
    02. Uninstall
    03. npm install -g
    04. Automatic Restart
    05. Color


}






example {

    option nodemon
    -- nodemon --watch server --ext ts --exec ts-node --ignore '*.test.ts' --delay 3 server/server.ts
    
}
