
Filtering and Sorting 
Aggregation Function 
Multi table queries with joins 


Links {
    -- 
    -- 
}


Notes  {

    -- SQL is a language

    -- SUM 
    -- AVG 
    -- COUNT 
    -- MAX 
    -- MIN 

    -- ASC
    -- DESC

    -- LIMIT
    -- OFFSET

    -- ALTER BY
    -- ORDER BY 
    -- GROUP BY 

    -- AUTO_INCREMENT 
    -- NOT NULL 
    -- DISTINCT

    -- SELECT
    -- UPDATE 
    -- DELETE
    -- SET 


    -- * 
    -- AS
    -- ON
    -- AND
    -- USE
    -- SHOW
    -- INTO
    -- FROM
    -- VALUES 
    -- WHERE

    -- INNER JOIN
    -- LEFT JOIN
    -- RIGHT JOIN
    -- UNION 

}




Task {
    -- explore mysql workbench 
    -- pracitcal implementation 2 
    -- explore GROUP BY
}






------------------------------
------------------------------
------------------------------




Filtering & Sorting {

    -- DISTINCT 
    -- using DISTINCT in multipe column 

    -- ORDER BY
    -- ASC 
    -- DESC 

    -- ALTER BY 

    -- LIMIT 
    -- OFFSET 

    -- pagination

}





Aggregation function {
    
    MAX
    -- ignore null values 
    -- return max value
    -- return null if set is empty

    MIN
    -- return min value
    -- return null if set is empty
    -- 


    COUNT()
    -- total number of rows 
    -- total number of non-null values in a column 
    -- COUNT(expression)
    -- COUNT(all expression)
    -- COUNT(distinct expression) = total number of rows, with unique value only 
    -- COUNT(*) = total number of rows including, row having null value


    SUM()
    -- DISTINCT instructs SUM() to ignore duplicates 
    -- SUM() returns null if empty 
    -- by default SUM() calculate all value 
    -- sum on character will give zero 


    AVG()
    -- average 


    GROUP BY 
    --  group rows with the same values in one or more columns into summary rows.
    --  eg. Select sum(year) from movies group by director ;

    AUTO_INCREMENT
    -- it is attribute
    -- create a unique number for each row 
}





Multi table queries with join{

    commands 
    -- INNER JOIN
    -- LEFT JOIN
    -- RIGHT JOIN
    -- UNION 
    
    previous commands
    -- SELECT
    -- FROM
    -- AS 
    -- ASC
    -- DESC
    -- ON 
    -- 

    inner join
    -- return matching value from both table 

    left join
    -- left outer join 
    -- return left table + common from both table 

    right join
    -- right outer join 
    -- return right table + common from both table 

    full join
    -- full outer join 
    -- combine both table 

    cross join 
    -- Cartesian join
}






quiz {

    Activity: Fill in the blanks
    
    01. To retrieve only unique values from a column in a SQL query, you can use the ________(distinct / unique) keyword.
    
    02.  To sort the query results in ascending order based on a specific column, you can use the ________(order by / sort by) keyword.
    
    03.  The ________(restrict / limit) clause is used to limit the number of rows returned by a SQL query.
    
    04. The ________(skip / offset) clause is used to specify how many rows to skip before starting to retrieve rows in a SQL query.
    
    Answers
    01. Distinct
    02. Order By
    03. Limit
    04. Offset






    Activity : Guess the word 

    01.  When you want to see the total of a numeric column, you would use this function.

    02. This aggregation function finds the highest value in a column.

    03. An SQL clause used to group rows that have the same values in specified columns.
     
    04. The function that computes the arithmetic mean of a numeric column.
     
    05. A function that returns the total number of rows that meet a specified condition.


    Answers
    01. SUM
    02. MAX
    03. GROUP
    04. AVG
    05. COUNT





    01. An Inner Join returns all rows from both tables, combining them based on a specified condition.
     
    02. Cross Joins are generally used when you want to create a Cartesian product intentionally, and they are less common in practical SQL queries.
     
    03. A Full Join (Full Outer Join) returns all rows from both tables, including both matching and non-matching rows.
     
    04. A Full Join can be emulated by performing a Union of a Left Join and a Right Join between two tables.
     
    05.  A Right Join and a Left Join produce the same result if you swap the order of the tables and reverse the direction of the join condition.
     
    Answers
    01. False
    02. True
    03. True
    04. True
    05. True


}












