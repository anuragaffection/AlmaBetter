
Links {
    - https://gobyexample.com/
    - https://www.w3schools.com/go
    - https://www.boot.dev/
    - https://www.boot.dev/learn/learn-golang
    - https://www.geeksforgeeks.org/golang-project-ideas/
    - https://zerotomastery.io/blog/golang-practice-projects/
    - https://masteringbackend.com/posts/software-architecture-with-golang
}


fmt   = formatting package 
+     = for concatenation 
:=    = used for short assignment
:=    = called as walrus operator
var   = variable initialization 
nil   = 

print formatting {
    - %v    = print the value of variable
    - %T    = print Type of variable

    - %s    = string 
    - %q    = double quoted string 

    - %d    = int 

    - %f    = float  
    - %.2f  = float to two decimal only 
    - %t    = boolean 

}


escape characters {
    -   \n 
    -   
}


fmt print type {
    - Println()
    - Print()
    - Printf()
    - Sprintf()
    - Fprintf()
}


Method in go 
- len ()
- append()
- copy()
- float64()


special function in go {
    - main()
    - init()
}



Data types
- bool 
- int , int8, int16, int32, int64
- float32, float64
- string 
- complex64, complex128
- byte ]]
- rune ]]
- uint uint8 uint16 uint32 uint64 uintptr
- 




Go Important Notes {
    -- Go uses explicit error handling.
    -- Each database operation typically returns an error, which you need to handle.
    -- In Go, we use a cursor to iterate over the results of a query.
    -- In Go, any executable code belongs to the main package.
    -- 

}




The fmt.Fprintf function expects at least two arguments:
1. an io.Writer (w)
2. a format specifier
3. optional arguments.





Notes 
-- The default value for int is 0, and the default value for string is "".
-- https://www.w3schools.com/go/go_arrays.php
-- The value of a declared variable with no assignment will be its zero value.
-- The make()function is the right way to create an empty map. If you make an empty map in a different way and write to it, it will causes a runtime panic.
-- https://www.w3schools.com/go/go_maps.php
-- Go, C, and Rust are all languages where the code is first converted to machine code by the compiler before it's executed.


Task {
    - Compiler vs Interpreter vs transpiler 
    - Code execution in java vs Go 
    - slice vs array in go 
    - array vs slice vs struct vs maps 
    - range in go 
    - make in go 
}





Go Project Setup {
    - go version = to check version 
    - go mod init <project_name>
    - go 
}





Go Blog {
    - simple project setup in go 
    - 
}



Mongdb setup with go {
    -- go get go.mongodb.org/mongo-driver
    -- go get go.mongodb.org/mongo-driver/mongo


    -- import 
    "context"
	"log"

}


Thank You 
